{"version":3,"sources":["webpack:///./src/components/ising/index.vue?44ab","webpack:///src/components/ising/index.vue","webpack:///./src/components/ising/index.vue?9253","webpack:///./src/components/ising/index.vue"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","attrs","on","handleSelect","model","value","callback","$$v","activeIndex","expression","_v","staticStyle","go","length","_l","item","key","label","refresh","upColor","downColor","simulateMode","Number","formatTooltipT","temperature","formatTooltipSpf","spf","act2","start","stopAnimation","wikiEnabled","$event","dialogClose","staticRenderFns","menuKey","arr","energy","count","c","cxt","image","running","aboutEnabled","spfOptions","sizeOptions","setTimeout","methods","mode","act_metro","act_hb","act_wolff","val","Math","pow","toFixed","tab","pixelMethod","stepPF","temp","loop","element","parseInt","random","x","y","eup","getEnergy","edown","T","pup","exp","pdown","probup","draw","draw2","putImageData","cluster","Array","i","fill","Fold","Fnew","a","p","q","j","prob","push","deltaEnergy","next2","stop","window","requestAnimationFrame","act","bitwise","log2","r","g","b","up","JSON","parse","stringify","down","split","px","py","index","width","data","fillStyle","fillRect","cancelAnimationFrame","document","getElementById","getContext","createImageData","height","round","drawer","left","right","sum","newArray","keys","sort","forEach","component"],"mappings":"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","file":"js/chunk-2d0decf3.02465969.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"app-container\",attrs:{\"id\":\"app\"}},[_c('div',[_c('div',{staticClass:\"tab-container\"},[_c('el-tabs',{staticClass:\"tabs\",on:{\"tab-click\":_vm.handleSelect},model:{value:(_vm.activeIndex),callback:function ($$v) {_vm.activeIndex=$$v},expression:\"activeIndex\"}},[_c('el-tab-pane',{staticClass:\"tab\",attrs:{\"label\":\"wiki\",\"name\":\"wiki\"}}),_c('el-tab-pane',{staticClass:\"tab\",attrs:{\"label\":\"about\",\"name\":\"about\"}})],1)],1),_c('div',{staticClass:\"main\"},[_c('el-card',{staticClass:\"canvas-container\"},[_c('canvas',{attrs:{\"id\":\"myCanvas\",\"width\":\"512\",\"height\":\"512\"}})]),_c('el-card',{staticClass:\"panel\"},[_c('el-row',[_vm._v(\" 格子边长 \"),_c('el-select',{staticStyle:{\"width\":\"80px\"},on:{\"change\":_vm.go},model:{value:(_vm.length),callback:function ($$v) {_vm.length=$$v},expression:\"length\"}},_vm._l((_vm.sizeOptions),function(item){return _c('el-option',{key:item.value,attrs:{\"label\":item.label,\"value\":item.value}})}),1),_vm._v(\"上 \"),_c('el-color-picker',{attrs:{\"color-format\":\"rgb\"},on:{\"change\":_vm.refresh},model:{value:(_vm.upColor),callback:function ($$v) {_vm.upColor=$$v},expression:\"upColor\"}}),_vm._v(\"下 \"),_c('el-color-picker',{attrs:{\"color-format\":\"rgb\"},on:{\"change\":_vm.refresh},model:{value:(_vm.downColor),callback:function ($$v) {_vm.downColor=$$v},expression:\"downColor\"}})],1),_c('el-row',[_c('el-radio',{attrs:{\"label\":\"metropolis\"},model:{value:(_vm.simulateMode),callback:function ($$v) {_vm.simulateMode=$$v},expression:\"simulateMode\"}},[_vm._v(\"metropolis\")]),_c('el-radio',{attrs:{\"label\":\"heat-bath\"},model:{value:(_vm.simulateMode),callback:function ($$v) {_vm.simulateMode=$$v},expression:\"simulateMode\"}},[_vm._v(\"heat-bath\")]),_c('el-radio',{attrs:{\"label\":\"wolff-cluster\"},model:{value:(_vm.simulateMode),callback:function ($$v) {_vm.simulateMode=$$v},expression:\"simulateMode\"}},[_vm._v(\"wolff-cluster\")])],1),_c('el-row',[_vm._v(\" 温度 \"),_c('el-slider',{attrs:{\"min\":Number(-2),\"max\":Number(1),\"step\":Number(0.05),\"id\":\"temperature\",\"format-tooltip\":_vm.formatTooltipT},model:{value:(_vm.temperature),callback:function ($$v) {_vm.temperature=$$v},expression:\"temperature\"}})],1),_c('el-row',[_vm._v(\" 每帧步数 \"),_c('el-slider',{attrs:{\"min\":Number(0),\"max\":Number(12),\"step\":Number(1),\"id\":\"spf\",\"format-tooltip\":_vm.formatTooltipSpf},model:{value:(_vm.spf),callback:function ($$v) {_vm.spf=$$v},expression:\"spf\"}})],1),_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":_vm.act2}},[_vm._v(\"下一步\")]),_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":_vm.start}},[_vm._v(\"开始\")]),_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":_vm.go}},[_vm._v(\"初始化\")]),_c('el-button',{attrs:{\"type\":\"danger\"},on:{\"click\":_vm.stopAnimation}},[_vm._v(\"停止\")])],1)],1),_c('el-dialog',{attrs:{\"title\":\"wiki\",\"visible\":_vm.wikiEnabled,\"width\":\"80%\"},on:{\"update:visible\":function($event){_vm.wikiEnabled=$event},\"close\":_vm.dialogClose}},[_c('iframe',{attrs:{\"src\":\"https://zh.wikipedia.org/wiki/%E6%98%93%E8%BE%9B%E6%A8%A1%E5%9E%8B\",\"width\":\"100%\",\"height\":\"400px\"}})])],1)])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div id=\"app\" class=\"app-container\">\r\n    <!-- <div style=\"display:block;margin:0 auto;width: 450px;\"> -->\r\n    <div>\r\n      <div class = \"tab-container\">\r\n      <el-tabs v-model=\"activeIndex\" @tab-click=\"handleSelect\" class = \"tabs\">\r\n        <el-tab-pane label=\"wiki\" name=\"wiki\" class = \"tab\"></el-tab-pane>\r\n        <el-tab-pane label=\"about\" name=\"about\" class = \"tab\"></el-tab-pane>\r\n      </el-tabs>\r\n      </div>\r\n      <!-- <el-menu :default-active=\"activeIndex\" mode=\"horizontal\" @select=\"handleSelect\">\r\n        <el-menu-item index=\"wiki\">wiki</el-menu-item>\r\n        <el-menu-item index=\"about\">about</el-menu-item>\r\n      </el-menu> -->\r\n      <div class = \"main\">\r\n        <el-card class = \"canvas-container\">\r\n          <canvas id=\"myCanvas\" width=\"512\" height=\"512\"></canvas>\r\n        </el-card>\r\n        <el-card class = \"panel\">\r\n          <el-row>\r\n            格子边长\r\n            <el-select v-model=\"length\" style=\"width: 80px\" @change=\"go\">\r\n              <el-option\r\n                v-for=\"item in sizeOptions\"\r\n                :key=\"item.value\"\r\n                :label=\"item.label\"\r\n                :value=\"item.value\"\r\n              ></el-option>\r\n            </el-select>上\r\n            <el-color-picker v-model=\"upColor\" color-format=\"rgb\" @change=\"refresh\"></el-color-picker>下\r\n            <el-color-picker v-model=\"downColor\" color-format=\"rgb\" @change=\"refresh\"></el-color-picker>\r\n          </el-row>\r\n          <el-row>\r\n            <el-radio v-model=\"simulateMode\" label=\"metropolis\">metropolis</el-radio>\r\n            <el-radio v-model=\"simulateMode\" label=\"heat-bath\">heat-bath</el-radio>\r\n            <el-radio v-model=\"simulateMode\" label=\"wolff-cluster\">wolff-cluster</el-radio>\r\n          </el-row>\r\n          <el-row>\r\n            温度\r\n            <el-slider\r\n              v-model=\"temperature\"\r\n              :min=\"Number(-2)\"\r\n              :max=\"Number(1)\"\r\n              :step=\"Number(0.05)\"\r\n              id=\"temperature\"\r\n              :format-tooltip=\"formatTooltipT\"\r\n            ></el-slider>\r\n          </el-row>\r\n          <el-row>\r\n            每帧步数\r\n            <el-slider\r\n              v-model=\"spf\"\r\n              :min=\"Number(0)\"\r\n              :max=\"Number(12)\"\r\n              :step=\"Number(1)\"\r\n              id=\"spf\"\r\n              :format-tooltip=\"formatTooltipSpf\"\r\n            ></el-slider>\r\n          </el-row>\r\n\r\n          <el-button @click=\"act2\" type=\"primary\">下一步</el-button>\r\n          <el-button @click=\"start\" type=\"primary\">开始</el-button>\r\n          <el-button @click=\"go\" type=\"primary\">初始化</el-button>\r\n          <el-button @click=\"stopAnimation\" type=\"danger\">停止</el-button>\r\n        </el-card>\r\n      </div>\r\n      <el-dialog title=\"wiki\" \r\n      :visible.sync=\"wikiEnabled\" \r\n      width=\"80%\"\r\n      @close=\"dialogClose\">\r\n        <iframe src=\"https://zh.wikipedia.org/wiki/%E6%98%93%E8%BE%9B%E6%A8%A1%E5%9E%8B\" \r\n          width=\"100%\" height=\"400px\"></iframe>\r\n      </el-dialog>\r\n      \r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      //drawer: false,  显示抽屉\r\n      simulateMode: 'metropolis',\r\n      menuKey: '1',\r\n      activeIndex: 'none',\r\n      spf: 4, //step per frame\r\n      length: 128, //边长\r\n      temperature: 0,\r\n      upColor: \"rgb(255, 255, 255)\",\r\n      downColor: \"rgb(0, 0, 0)\",\r\n      //showX: 0,\r\n      //showY: 0,\r\n      arr: [[-1]],\r\n      energy: 0,\r\n      count: 0,\r\n      c: \"\", //canvas\r\n      cxt: \"\", //canvas.context\r\n      //stop: '',       //控制暂停 用running代替\r\n      image: \"\", //绘制图像\r\n      running: false, //控制运行\r\n      wikiEnabled: false,//wiki弹窗可见\r\n      aboutEnabled: false,//about弹窗可见\r\n      spfOptions: [1, 10, 20, 50, 100, 200, 500, 1000, 2000, 5000, 10000, 20000, 50000],\r\n      sizeOptions: [\r\n        {\r\n          value: 32,\r\n          label: \"32\"\r\n        },\r\n        {\r\n          value: 64,\r\n          label: \"64\"\r\n        },\r\n        {\r\n          value: 128,\r\n          label: \"128\"\r\n        },\r\n        {\r\n          value: 256,\r\n          label: \"256\"\r\n        },\r\n        {\r\n          value: 512,\r\n          label: \"512\"\r\n        }\r\n      ]\r\n    };\r\n  },\r\n  created() {\r\n    setTimeout(() => {\r\n      this.go();//初始化\r\n      this.start();\r\n    }, 100);//延迟100ms调用初始化 避免找不到组件\r\n  },\r\n  methods: {\r\n    start(){\r\n      this.running = true;\r\n      let mode = this.simulateMode;\r\n      if (mode == \"metropolis\")\r\n        this.act_metro();\r\n      else if (mode == \"heat-bath\")\r\n        this.act_hb();\r\n      else if (mode == \"wolff-cluster\")\r\n        this.act_wolff();\r\n    },\r\n    formatTooltipSpf(val) {//格式化spf的slider的tootip\r\n      return this.spfOptions[val];\r\n    },\r\n    formatTooltipT(val) {//格式化温度的slider的tootip\r\n      return Math.pow(10, val).toFixed(2);\r\n    },\r\n    handleSelect(tab){\r\n      if (tab.label == 'wiki'){\r\n        this.wikiEnabled = true;\r\n      }else if (tab.label == 'about'){\r\n\r\n      }\r\n    },\r\n    dialogClose(){\r\n      this.activeIndex = \"none\";\r\n      this.activeIndex = \"\";\r\n      //this.menuKey=this.menuKey=='1'?'0':'1';\r\n    },\r\n    act_hb() {\r\n      //heat-bath方法\r\n      if (this.running){\r\n        if (this.simulateMode == \"heat-bath\"){\r\n          let length = this.length;\r\n          let pixelMethod = length>100;\r\n          let stepPF = this.spfOptions[this.spf];\r\n          let temp = this.temperature;\r\n          for (let loop = 0; loop < stepPF; loop++){\r\n            let element = parseInt(Math.random() * length * length);\r\n            let x = element%length;\r\n            let y = parseInt(element/length);\r\n            //window.console.log('x:'+x+' y:'+y);\r\n            let eup = this.getEnergy(x, y)*this.arr[x][y];\r\n            let edown = -eup;\r\n            let T = Math.pow(10, temp).toFixed(2);\r\n            let pup = Math.exp(-eup/T);\r\n            let pdown = Math.exp(-edown/T);\r\n            let probup = pup/(pup+pdown);\r\n            if (Math.random() < probup){\r\n              this.arr[x][y] = 1;\r\n            }else{\r\n              this.arr[x][y] = -1;\r\n            }\r\n            if (pixelMethod)\r\n              this.draw(x, y);\r\n            else\r\n              this.draw2(x, y);\r\n          }\r\n          if (pixelMethod)\r\n            this.cxt.putImageData(this.image, 0, 0); //刷新画布\r\n          setTimeout(() => {\r\n            //间隔1ms 递归调用\r\n            this.act_hb();\r\n          }, 1);\r\n        }else if (this.simulateMode == \"wolff-cluster\"){\r\n          this.act_wolff();\r\n        }else if (this.simulateMode == \"metropolis\"){\r\n          this.act_metro();\r\n        }\r\n      }\r\n    },\r\n    act_wolff() {\r\n      //wolff方法\r\n      if (this.running){\r\n        if (this.simulateMode == \"wolff-cluster\"){\r\n          let length = this.length;\r\n          let pixelMethod = length>100;\r\n          let stepPF = this.spfOptions[this.spf];\r\n          let temp = this.temperature;\r\n          //for (let loop = 0; loop < stepPF; loop ++){\r\n            let element = parseInt(Math.random() * length * length);\r\n            // let cluster = [{\r\n            //   'x': element % length,\r\n            //   'y': parseInt(element / length)\r\n            // }];\r\n            let cluster = new Array(length);\r\n            for (let i = 0; i < length; i++)\r\n              cluster[i] = new Array(length).fill(0);\r\n            let Fold = [{\r\n              'x': element % length,\r\n              'y': parseInt(element / length)\r\n            }];\r\n            while (Fold.length != 0){\r\n              let Fnew = [];\r\n              for (let a = 0; a < Fold.length; a++){\r\n                let i = Fold[a];\r\n                for ( let p = -1; p <= 1; p += 2)\r\n                  for ( let q = -1; q <= 1; q += 2){ //遍历neighbor\r\n                    let j = {};\r\n                    j.x = (i.x + ( p + q ) / 2 + length) % length;\r\n                    j.y = (i.y + ( p - q ) / 2 + length) % length;\r\n                    if (this.arr[i.x][i.y] == this.arr[j.x][j.y] && \r\n                    // !cluster.find(point => {\r\n                    //   return point.x==j.x&&point.y==j.y;\r\n                    // })\r\n                    cluster[j.x][j.y] == 0\r\n                    )//状态相同为同一族群\r\n                    {\r\n                      let T = Math.pow(10, temp).toFixed(2);\r\n                      let prob = Math.exp(-2/T);\r\n                      if (Math.random() > prob){\r\n                        Fnew.push(j);\r\n                        // cluster.push(j);\r\n                        cluster[j.x][j.y] = 1;\r\n                      }\r\n                    }\r\n                  }\r\n              }\r\n              Fold = Fnew;\r\n            }\r\n            //console.log(cluster);\r\n            //for( let i = 0; i < cluster.length; i++){\r\n              for( let i = 0; i < length; i++)\r\n              for( let j = 0; j < length; j++){\r\n              //this.arr[cluster[i].x][cluster[i].y] *= -1;\r\n              if (cluster[i][j] == 1){\r\n                this.arr[i][j]*=-1;\r\n                if (pixelMethod)\r\n                  //this.draw(cluster[i].x, cluster[i].y);\r\n                  this.draw(i,j);\r\n                else\r\n                  //this.draw2(cluster[i].x, cluster[i].y);\r\n                  this.draw2(i,j);\r\n              }\r\n                \r\n            }\r\n          //}\r\n          if (pixelMethod)\r\n            this.cxt.putImageData(this.image, 0, 0); //刷新画布\r\n          if (this.simulateMode == \"wolff-cluster\")\r\n            setTimeout(() => {\r\n              //间隔1ms 递归调用\r\n              this.act_wolff();\r\n            }, 1);\r\n        }else if (this.simulateMode == \"metropolis\"){\r\n          this.act_metro();\r\n        }else if (this.simulateMode == \"heat-bath\"){\r\n          this.act_hb();\r\n        }\r\n        \r\n      }\r\n    },\r\n    act_metro() {\r\n      //metropolis方法\r\n      if (this.running) {\r\n        if (this.simulateMode == 'metropolis'){\r\n          let length = this.length;\r\n          let pixelMethod = length>100;\r\n          let stepPF = this.spfOptions[this.spf];\r\n          let temp = this.temperature;\r\n          for (let loop = 0; loop < stepPF ; loop++) {\r\n            let element = parseInt(Math.random() * length * length);\r\n            let x = element % length;\r\n            let y = parseInt(element / length);\r\n            let energy = this.getEnergy(x, y);\r\n            let deltaEnergy = energy * -2;\r\n            let T = Math.pow(10, temp).toFixed(2);\r\n            let prob = Math.exp(-deltaEnergy / T);\r\n            if (Math.random() < prob) {\r\n              this.arr[x][y] *= -1;\r\n              if (pixelMethod)\r\n                this.draw(x, y);\r\n              else\r\n                this.draw2(x, y);\r\n            }\r\n          }\r\n          if (pixelMethod)\r\n            this.cxt.putImageData(this.image, 0, 0); //刷新画布\r\n          if (this.simulateMode == \"metropolis\")\r\n            setTimeout(() => {\r\n              //间隔1ms 递归调用\r\n              this.act_metro();\r\n            }, 1);\r\n        }else if (this.simulateMode == \"wolff-cluster\"){\r\n          this.act_wolff();\r\n        }else if (this.simulateMode == \"heat-bath\"){\r\n          this.act_hb();\r\n        }\r\n      }\r\n    },\r\n    act2() {\r\n      //分步模拟\r\n      this.next2();\r\n      this.cxt.putImageData(this.image, 0, 0);\r\n    },\r\n    act() {\r\n      //模拟函数 已弃用\r\n      //this.c.clearRect(0,0,this.c.width,this.c.height);\r\n      this.next2();\r\n      //this.cxt.putImageData(this.image, 0, 0);\r\n      this.stop = window.requestAnimationFrame(this.act);\r\n    },\r\n    draw(x, y) {\r\n      //绘制坐标为xy点的矩阵的image(格子小时的快速方法)\r\n      let length = this.length;\r\n      let bitwise = Math.log2(length);\r\n      var r, g, b;\r\n      var up = JSON.parse(JSON.stringify(this.upColor));\r\n      var down = JSON.parse(JSON.stringify(this.downColor));\r\n      if ((this.arr[x][y]+1)>>1 & 1) {\r\n        up = up.split(\"(\")[1];\r\n        up = up.split(\")\")[0];\r\n        up = up.split(\", \");\r\n        r = parseInt(up[0]);\r\n        g = parseInt(up[1]);\r\n        b = parseInt(up[2]);\r\n      } else {\r\n        down = down.split(\"(\")[1];\r\n        down = down.split(\")\")[0];\r\n        down = down.split(\", \");\r\n        r = parseInt(down[0]);\r\n        g = parseInt(down[1]);\r\n        b = parseInt(down[2]);\r\n      }\r\n      for (\r\n        let px = (x<<9)>>bitwise;\r\n        px < ((x + 1)<<9)>>bitwise;\r\n        px++\r\n      ) {\r\n        for (\r\n          let py = (y<<9)>>bitwise;\r\n          py < ((y + 1)<<9)>>bitwise;\r\n          py++\r\n        ) {\r\n          var index = (px + py * this.image.width)<<2;\r\n          this.image.data[index + 0] = r;\r\n          this.image.data[index + 1] = g;\r\n          this.image.data[index + 2] = b;\r\n        }\r\n      }\r\n\r\n      \r\n    },\r\n    draw2(x, y){\r\n      //格子大时的方法\r\n      let length = this.length;\r\n      let bitwise = Math.log2(length);\r\n      if ((this.arr[x][y]+1)>>1 & 1)\r\n        this.cxt.fillStyle=this.upColor;\r\n      else\r\n        this.cxt.fillStyle=this.downColor;\r\n      this.cxt.fillRect(x<<9>>bitwise,y<<9>>bitwise,512>>bitwise,512>>bitwise);\r\n    },\r\n    stopAnimation() {\r\n      this.running = false;\r\n      if (this.stop != \"\") window.cancelAnimationFrame(this.stop);//已弃用\r\n    },\r\n    refresh() {\r\n      //刷新画布所有像素\r\n      for (var x = 0; x < this.length; x++) {\r\n        for (var y = 0; y < this.length; y++) {\r\n          this.draw(x, y);\r\n        }\r\n      }\r\n      this.cxt.putImageData(this.image, 0, 0);\r\n    },\r\n    go() {\r\n      //矩阵与画布初始化\r\n      //window.console.log(this.upColor);\r\n      this.arr = new Array();\r\n      this.c = document.getElementById(\"myCanvas\");\r\n      this.cxt = this.c.getContext(\"2d\");\r\n      this.image = this.cxt.createImageData(this.c.width, this.c.height);\r\n      let length = this.length;\r\n      let pixelMethod = length >100;\r\n      for (var i = 0; i < this.image.data.length; i += 4) {\r\n        //image.data[i] = 255;\r\n        //image.data[i+1] = 255;\r\n        //image.data[i+2] = 255;\r\n        this.image.data[i + 3] = 255;\r\n      }\r\n      for (var x = 0; x < this.length; x++) {\r\n        this.arr[x] = new Array();\r\n        for (var y = 0; y < this.length; y++) {\r\n          if (Math.round(Math.random()) == 0) this.arr[x][y] = -1;\r\n          else this.arr[x][y] = 1;\r\n          if (pixelMethod)\r\n            this.draw(x, y);\r\n          else\r\n            this.draw2(x, y);\r\n        }\r\n      }\r\n      if (pixelMethod)\r\n        this.cxt.putImageData(this.image, 0, 0);\r\n      this.drawer = false;\r\n    },\r\n    next() {\r\n      //瞎jb写的\r\n      for (var x = 0; x < this.length; x++) {\r\n        for (var y = 0; y < this.length; y++) {\r\n          let left = 0;\r\n          let right = 0;\r\n          let up = 0;\r\n          let down = 0;\r\n          if (x != 0) left = this.arr[x - 1][y];\r\n          if (x != this.length - 1) right = this.arr[x + 1][y];\r\n          if (y != 0) up = this.arr[x][y - 1];\r\n          if (y != this.length - 1) down = this.arr[x][y + 1];\r\n          let sum = left + right + up + down;\r\n          if (sum > 0) this.arr[x][y] = 1;\r\n          else if (sum < 0) this.arr[x][y] = -1;\r\n        }\r\n      }\r\n\r\n      this.draw();\r\n    },\r\n    next2() {\r\n      //分步模拟\r\n      let length = this.length;\r\n      let temp = this.temperature;\r\n      var newArray = [...new Array(length * length).keys()];\r\n      newArray.sort(() => {\r\n        return 0.5 - Math.random();\r\n      });\r\n      let count = 0;\r\n      newArray.forEach(element => {\r\n        let x = element % this.length;\r\n        let y = parseInt(element / length);\r\n        let energy = this.getEnergy(x, y);\r\n        let deltaEnergy = energy * -2;\r\n        let T = Math.pow(10, temp).toFixed(2);\r\n        let prob = Math.exp(-deltaEnergy / T);\r\n        //window.console.log('probability:' + prob);\r\n        if (Math.random() < prob) {\r\n          this.arr[x][y] *= -1;\r\n          this.draw(x, y);\r\n          count++;\r\n        }\r\n      });\r\n\r\n      this.count = count;\r\n\r\n\r\n    },\r\n    getEnergy(x, y) {\r\n      //获取xy坐标点的能量值\r\n      let length = this.length;\r\n      x = Number(x);\r\n      y = Number(y);\r\n      if (x < 0 || (x >= length) | (y < 0) || y >= length) {\r\n        //window.console.log('false');\r\n        return 0;\r\n      } else {\r\n        let sum = 0;\r\n        for ( let i = -1; i <= 1; i += 2)\r\n          for ( let j = -1; j <= 1; j += 2)\r\n            sum += this.arr[(x+(i+j)/2+length)%length][(y+(i-j)/2+length)%length];\r\n        let energy = -this.arr[x][y] * sum;\r\n        //window.console.log(energy);\r\n        this.energy = energy;\r\n        return energy;\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n  \r\n<style lang=\"scss\">\r\n</style>\r\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./index.vue?vue&type=template&id=27b9f293&\"\nimport script from \"./index.vue?vue&type=script&lang=js&\"\nexport * from \"./index.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}