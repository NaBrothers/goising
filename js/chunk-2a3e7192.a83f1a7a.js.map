{"version":3,"sources":["webpack:///./src/components/ising/index.vue?ace4","webpack:///./src/components/ising/index.vue?efb6","webpack:///src/components/ising/index.vue","webpack:///./src/components/ising/index.vue?9253","webpack:///./src/components/ising/index.vue"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","attrs","on","handleSelect","model","value","callback","$$v","activeIndex","expression","_v","staticStyle","go","length","_l","item","key","label","refresh","upColor","downColor","simulateMode","_s","magSus","Math","pow","temperature","toFixed","Number","formatTooltipT","spfOptions","spf","formatTooltipSpf","act2","start","stopAnimation","wikiEnabled","$event","dialogClose","aboutEnabled","staticRenderFns","component"],"mappings":"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","file":"js/chunk-2a3e7192.a83f1a7a.js","sourcesContent":["import mod from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=style&index=0&id=5c478f4a&lang=css&scoped=true&\"; export default mod; export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=style&index=0&id=5c478f4a&lang=css&scoped=true&\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"app-container\",attrs:{\"id\":\"app\"}},[_c('div',{staticClass:\"header\"},[_c('div',{staticClass:\"tab-container\"},[_c('el-tabs',{staticClass:\"tabs\",on:{\"tab-click\":_vm.handleSelect},model:{value:(_vm.activeIndex),callback:function ($$v) {_vm.activeIndex=$$v},expression:\"activeIndex\"}},[_c('el-tab-pane',{staticClass:\"tab\",attrs:{\"label\":\"Wiki\",\"name\":\"wiki\"}}),_c('el-tab-pane',{staticClass:\"tab\",attrs:{\"label\":\"About\",\"name\":\"about\"}})],1)],1)]),_c('div',{staticClass:\"main\"},[_c('el-card',{staticClass:\"canvas-container\"},[_c('canvas',{attrs:{\"id\":\"myCanvas\",\"width\":\"512\",\"height\":\"512\"}})]),_c('el-card',{staticClass:\"panel\"},[_c('el-row',[_vm._v(\" Box Length \"),_c('el-select',{staticStyle:{\"width\":\"80px\"},on:{\"change\":_vm.go},model:{value:(_vm.length),callback:function ($$v) {_vm.length=$$v},expression:\"length\"}},_vm._l((_vm.sizeOptions),function(item){return _c('el-option',{key:item.value,attrs:{\"label\":item.label,\"value\":item.value}})}),1)],1),_c('el-row',[_vm._v(\" Color \"),_c('el-color-picker',{attrs:{\"color-format\":\"rgb\"},on:{\"change\":_vm.refresh},model:{value:(_vm.upColor),callback:function ($$v) {_vm.upColor=$$v},expression:\"upColor\"}}),_c('el-color-picker',{attrs:{\"color-format\":\"rgb\"},on:{\"change\":_vm.refresh},model:{value:(_vm.downColor),callback:function ($$v) {_vm.downColor=$$v},expression:\"downColor\"}})],1),_c('el-row',[_c('div',[_vm._v(\"Mode\")]),_c('el-radio',{attrs:{\"label\":\"metropolis\"},model:{value:(_vm.simulateMode),callback:function ($$v) {_vm.simulateMode=$$v},expression:\"simulateMode\"}},[_vm._v(\"metropolis\")]),_c('el-radio',{attrs:{\"label\":\"heat-bath\"},model:{value:(_vm.simulateMode),callback:function ($$v) {_vm.simulateMode=$$v},expression:\"simulateMode\"}},[_vm._v(\"heat-bath\")]),_c('el-radio',{attrs:{\"label\":\"wolff-cluster\"},model:{value:(_vm.simulateMode),callback:function ($$v) {_vm.simulateMode=$$v},expression:\"simulateMode\"}},[_vm._v(\"wolff-cluster\")])],1),_c('el-row',[_vm._v(\" Magnetization \"),_c('span',{staticClass:\"value\"},[_vm._v(_vm._s(_vm.magSus))])]),_c('el-row',[_vm._v(\" Temperature \"),_c('span',{staticClass:\"value\"},[_vm._v(_vm._s(Math.pow(10, _vm.temperature).toFixed(2)))]),_c('el-slider',{attrs:{\"min\":Number(-2),\"max\":Number(1),\"step\":Number(0.05),\"id\":\"temperature\",\"format-tooltip\":_vm.formatTooltipT},model:{value:(_vm.temperature),callback:function ($$v) {_vm.temperature=$$v},expression:\"temperature\"}})],1),_c('el-row',[_vm._v(\" Steps per frame \"),_c('span',{staticClass:\"value\"},[_vm._v(_vm._s(_vm.spfOptions[_vm.spf]))]),_c('el-slider',{attrs:{\"min\":Number(0),\"max\":Number(12),\"step\":Number(1),\"id\":\"spf\",\"format-tooltip\":_vm.formatTooltipSpf},model:{value:(_vm.spf),callback:function ($$v) {_vm.spf=$$v},expression:\"spf\"}})],1),_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":_vm.act2}},[_vm._v(\"Next\")]),_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":_vm.start}},[_vm._v(\"Start\")]),_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":_vm.go}},[_vm._v(\"Initialize\")]),_c('el-button',{attrs:{\"type\":\"danger\"},on:{\"click\":_vm.stopAnimation}},[_vm._v(\"Stop\")])],1)],1),_c('el-dialog',{attrs:{\"title\":\"Wiki\",\"visible\":_vm.wikiEnabled,\"width\":\"80%\"},on:{\"update:visible\":function($event){_vm.wikiEnabled=$event},\"close\":_vm.dialogClose}},[_c('iframe',{attrs:{\"src\":\"https://en.wikipedia.org/wiki/Ising_model\",\"width\":\"100%\",\"height\":\"400px\"}})]),_c('el-dialog',{attrs:{\"title\":\"About\",\"visible\":_vm.aboutEnabled,\"width\":\"80%\"},on:{\"update:visible\":function($event){_vm.aboutEnabled=$event},\"close\":_vm.dialogClose}},[_c('div',{staticClass:\"about\"},[_c('h1',[_vm._v(\"Author\")]),_c('div',[_c('span',[_vm._v(\"Design & Theoretical Support:\")]),_vm._v(\" Navi Ning\")]),_c('div',[_c('span',[_vm._v(\"Programming:\")]),_vm._v(\" Nacuang Wang\")]),_c('h1',[_vm._v(\"Github\")]),_c('div',[_c('span',[_c('a',{attrs:{\"href\":\"https://github.com/NaBrothers/goising\",\"target\":\"_blank\"}},[_vm._v(\"GoIsing\")])])])])])],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n    <div id=\"app\" class=\"app-container\">\r\n        <!-- <div style=\"display:block;margin:0 auto;width: 450px;\"> -->\r\n        <div class=\"header\">\r\n        <div class=\"tab-container\">\r\n            <el-tabs v-model=\"activeIndex\" @tab-click=\"handleSelect\" class=\"tabs\">\r\n                <el-tab-pane label=\"Wiki\" name=\"wiki\" class=\"tab\"></el-tab-pane>\r\n                <el-tab-pane label=\"About\" name=\"about\" class=\"tab\"></el-tab-pane>\r\n            </el-tabs>\r\n        </div>\r\n        </div>\r\n        <!-- <el-menu :default-active=\"activeIndex\" mode=\"horizontal\" @select=\"handleSelect\">\r\n          <el-menu-item index=\"wiki\">wiki</el-menu-item>\r\n          <el-menu-item index=\"about\">about</el-menu-item>\r\n        </el-menu> -->\r\n        <div class=\"main\">\r\n            <el-card class=\"canvas-container\">\r\n                <canvas id=\"myCanvas\" width=\"512\" height=\"512\"></canvas>\r\n            </el-card>\r\n            <el-card class=\"panel\">\r\n                <el-row>\r\n                    Box Length\r\n                    <el-select v-model=\"length\" style=\"width: 80px\" @change=\"go\">\r\n                        <el-option\r\n                                v-for=\"item in sizeOptions\"\r\n                                :key=\"item.value\"\r\n                                :label=\"item.label\"\r\n                                :value=\"item.value\"\r\n                        ></el-option>\r\n                    </el-select>\r\n                </el-row>\r\n                <el-row>\r\n                    Color\r\n                    <el-color-picker v-model=\"upColor\" color-format=\"rgb\" @change=\"refresh\"></el-color-picker>\r\n                    <el-color-picker v-model=\"downColor\" color-format=\"rgb\" @change=\"refresh\"></el-color-picker>\r\n                </el-row>\r\n                <el-row>\r\n                    <div>Mode</div>\r\n                    <el-radio v-model=\"simulateMode\" label=\"metropolis\">metropolis</el-radio>\r\n                    <el-radio v-model=\"simulateMode\" label=\"heat-bath\">heat-bath</el-radio>\r\n                    <el-radio v-model=\"simulateMode\" label=\"wolff-cluster\">wolff-cluster</el-radio>\r\n                </el-row>\r\n                <el-row>\r\n                    Magnetization\r\n                    <span class=\"value\">{{magSus}}</span>\r\n                </el-row>\r\n                <el-row>\r\n                    Temperature\r\n                    <span class=\"value\">{{Math.pow(10, temperature).toFixed(2)}}</span>\r\n                    <el-slider\r\n                            v-model=\"temperature\"\r\n                            :min=\"Number(-2)\"\r\n                            :max=\"Number(1)\"\r\n                            :step=\"Number(0.05)\"\r\n                            id=\"temperature\"\r\n                            :format-tooltip=\"formatTooltipT\"\r\n                    ></el-slider>\r\n                </el-row>\r\n                <el-row>\r\n                    Steps per frame\r\n                    <span class=\"value\">{{spfOptions[spf]}}</span>\r\n                    <el-slider\r\n                            v-model=\"spf\"\r\n                            :min=\"Number(0)\"\r\n                            :max=\"Number(12)\"\r\n                            :step=\"Number(1)\"\r\n                            id=\"spf\"\r\n                            :format-tooltip=\"formatTooltipSpf\"\r\n                    ></el-slider>\r\n                </el-row>\r\n\r\n                <el-button @click=\"act2\" type=\"primary\">Next</el-button>\r\n                <el-button @click=\"start\" type=\"primary\">Start</el-button>\r\n                <el-button @click=\"go\" type=\"primary\">Initialize</el-button>\r\n                <el-button @click=\"stopAnimation\" type=\"danger\">Stop</el-button>\r\n            </el-card>\r\n        </div>\r\n        <el-dialog title=\"Wiki\"\r\n                   :visible.sync=\"wikiEnabled\"\r\n                   width=\"80%\"\r\n                   @close=\"dialogClose\">\r\n            <iframe src=\"https://en.wikipedia.org/wiki/Ising_model\"\r\n                    width=\"100%\" height=\"400px\"></iframe>\r\n        </el-dialog>\r\n        <el-dialog title=\"About\"\r\n                   :visible.sync=\"aboutEnabled\"\r\n                   width=\"80%\"\r\n                   @close=\"dialogClose\">\r\n            <div class=\"about\">\r\n                <h1>Author</h1>\r\n                <div><span>Design & Theoretical Support:</span> Navi Ning</div>\r\n                <div><span>Programming:</span> Nacuang Wang</div>\r\n                <h1>Github</h1>\r\n                <div><span><a href=\"https://github.com/NaBrothers/goising\" target=\"_blank\">GoIsing</a></span></div>\r\n            </div>\r\n        </el-dialog>\r\n\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    export default {\r\n        data() {\r\n            return {\r\n                //drawer: false,  显示抽屉\r\n                simulateMode: 'metropolis',\r\n                menuKey: '1',\r\n                activeIndex: 'none',\r\n                spf: 4, //step per frame\r\n                length: 128, //边长\r\n                temperature: 0,\r\n                arrSum: 0,\r\n                magSus: 0,\r\n                upColor: \"rgb(255, 255, 255)\",\r\n                downColor: \"rgb(0, 0, 0)\",\r\n                //showX: 0,\r\n                //showY: 0,\r\n                arr: [[-1]],\r\n                energy: 0,\r\n                count: 0,\r\n                c: \"\", //canvas\r\n                cxt: \"\", //canvas.context\r\n                //stop: '',       //控制暂停 用running代替\r\n                image: \"\", //绘制图像\r\n                running: false, //控制运行\r\n                wikiEnabled: false,//wiki弹窗可见\r\n                aboutEnabled: false,//about弹窗可见\r\n                spfOptions: [1, 10, 20, 50, 100, 200, 500, 1000, 2000, 5000, 10000, 20000, 50000],\r\n                sizeOptions: [\r\n                    {\r\n                        value: 32,\r\n                        label: \"32\"\r\n                    },\r\n                    {\r\n                        value: 64,\r\n                        label: \"64\"\r\n                    },\r\n                    {\r\n                        value: 128,\r\n                        label: \"128\"\r\n                    },\r\n                    {\r\n                        value: 256,\r\n                        label: \"256\"\r\n                    },\r\n                    {\r\n                        value: 512,\r\n                        label: \"512\"\r\n                    }\r\n                ]\r\n            };\r\n        },\r\n        created() {\r\n            setTimeout(() => {\r\n                this.go();//初始化\r\n                this.start();\r\n            }, 100);//延迟100ms调用初始化 避免找不到组件\r\n        },\r\n        methods: {\r\n            start() {\r\n                this.running = true;\r\n                let mode = this.simulateMode;\r\n                if (mode == \"metropolis\")\r\n                    this.act_metro();\r\n                else if (mode == \"heat-bath\")\r\n                    this.act_hb();\r\n                else if (mode == \"wolff-cluster\")\r\n                    this.act_wolff();\r\n            },\r\n            formatTooltipSpf(val) {//格式化spf的slider的tootip\r\n                return this.spfOptions[val];\r\n            },\r\n            formatTooltipT(val) {//格式化温度的slider的tootip\r\n                return Math.pow(10, val).toFixed(2);\r\n            },\r\n            handleSelect(tab) {\r\n                if (tab.label == 'Wiki') {\r\n                    this.wikiEnabled = true;\r\n                    this.aboutEnabled = false;\r\n                } else if (tab.label == 'About') {\r\n                    this.aboutEnabled = true;\r\n                    this.wikiEnabled = false;\r\n                }\r\n            },\r\n            dialogClose() {\r\n                this.activeIndex = \"none\";\r\n                this.activeIndex = \"\";\r\n                //this.menuKey=this.menuKey=='1'?'0':'1';\r\n            },\r\n            act_hb() {\r\n                //heat-bath方法\r\n                if (this.running) {\r\n                    if (this.simulateMode == \"heat-bath\") {\r\n                        let length = this.length;\r\n                        let pixelMethod = length > 100;\r\n                        let stepPF = this.spfOptions[this.spf];\r\n                        let temp = this.temperature;\r\n                        for (let loop = 0; loop < stepPF; loop++) {\r\n                            let element = parseInt(Math.random() * length * length);\r\n                            let x = element % length;\r\n                            let y = parseInt(element / length);\r\n                            //window.console.log('x:'+x+' y:'+y);\r\n                            let eup = this.getEnergy(x, y) * this.arr[x][y];\r\n                            let edown = -eup;\r\n                            let T = Math.pow(10, temp).toFixed(2);\r\n                            let pup = Math.exp(-eup / T);\r\n                            let pdown = Math.exp(-edown / T);\r\n                            let probup = pup / (pup + pdown);\r\n                            if (Math.random() < probup) {\r\n                                if (this.arr[x][y] == -1) {\r\n                                    this.arr[x][y] = 1;\r\n                                    this.arrSum += 2;\r\n                                }\r\n                            } else {\r\n                                if (this.arr[x][y] == 1) {\r\n                                    this.arr[x][y] = -1;\r\n                                    this.arrSum -= 2;\r\n                                }\r\n                            }\r\n                            this.magSus = Math.pow(this.arrSum / length / length, 2);\r\n                            if (pixelMethod)\r\n                                this.draw(x, y);\r\n                            else\r\n                                this.draw2(x, y);\r\n                        }\r\n                        if (pixelMethod)\r\n                            this.cxt.putImageData(this.image, 0, 0); //刷新画布\r\n                        setTimeout(() => {\r\n                            //间隔1ms 递归调用\r\n                            this.act_hb();\r\n                        }, 1);\r\n                    } else if (this.simulateMode == \"wolff-cluster\") {\r\n                        this.act_wolff();\r\n                    } else if (this.simulateMode == \"metropolis\") {\r\n                        this.act_metro();\r\n                    }\r\n                }\r\n            },\r\n            act_wolff() {\r\n                //wolff方法\r\n                if (this.running) {\r\n                    if (this.simulateMode == \"wolff-cluster\") {\r\n                        let length = this.length;\r\n                        let pixelMethod = length > 100;\r\n                        let stepPF = this.spfOptions[this.spf];\r\n                        let temp = this.temperature;\r\n                        //for (let loop = 0; loop < stepPF; loop ++){\r\n                        let element = parseInt(Math.random() * length * length);\r\n                        // let cluster = [{\r\n                        //   'x': element % length,\r\n                        //   'y': parseInt(element / length)\r\n                        // }];\r\n                        let cluster = new Array(length);\r\n                        for (let i = 0; i < length; i++)\r\n                            cluster[i] = new Array(length).fill(0);\r\n                        let Fold = [{\r\n                            'x': element % length,\r\n                            'y': parseInt(element / length)\r\n                        }];\r\n                        while (Fold.length != 0) {\r\n                            let Fnew = [];\r\n                            for (let a = 0; a < Fold.length; a++) {\r\n                                let i = Fold[a];\r\n                                for (let p = -1; p <= 1; p += 2)\r\n                                    for (let q = -1; q <= 1; q += 2) { //遍历neighbor\r\n                                        let j = {};\r\n                                        j.x = (i.x + (p + q) / 2 + length) % length;\r\n                                        j.y = (i.y + (p - q) / 2 + length) % length;\r\n                                        if (this.arr[i.x][i.y] == this.arr[j.x][j.y] &&\r\n                                            // !cluster.find(point => {\r\n                                            //   return point.x==j.x&&point.y==j.y;\r\n                                            // })\r\n                                            cluster[j.x][j.y] == 0\r\n                                        )//状态相同为同一族群\r\n                                        {\r\n                                            let T = Math.pow(10, temp).toFixed(2);\r\n                                            let prob = Math.exp(-2 / T);\r\n                                            if (Math.random() > prob) {\r\n                                                Fnew.push(j);\r\n                                                // cluster.push(j);\r\n                                                cluster[j.x][j.y] = 1;\r\n                                            }\r\n                                        }\r\n                                    }\r\n                            }\r\n                            Fold = Fnew;\r\n                        }\r\n                        //console.log(cluster);\r\n                        //for( let i = 0; i < cluster.length; i++){\r\n                        for (let i = 0; i < length; i++)\r\n                            for (let j = 0; j < length; j++) {\r\n                                //this.arr[cluster[i].x][cluster[i].y] *= -1;\r\n                                if (cluster[i][j] == 1) {\r\n                                    this.arr[i][j] *= -1;\r\n                                    this.arrSum += this.arr[i][j] * 2;\r\n                                    this.magSus = Math.pow(this.arrSum / length / length, 2);\r\n                                    if (pixelMethod)\r\n                                        //this.draw(cluster[i].x, cluster[i].y);\r\n                                        this.draw(i, j);\r\n                                    else\r\n                                        //this.draw2(cluster[i].x, cluster[i].y);\r\n                                        this.draw2(i, j);\r\n                                }\r\n\r\n                            }\r\n                        //}\r\n                        if (pixelMethod)\r\n                            this.cxt.putImageData(this.image, 0, 0); //刷新画布\r\n                        if (this.simulateMode == \"wolff-cluster\")\r\n                            setTimeout(() => {\r\n                                //间隔1ms 递归调用\r\n                                this.act_wolff();\r\n                            }, 1);\r\n                    } else if (this.simulateMode == \"metropolis\") {\r\n                        this.act_metro();\r\n                    } else if (this.simulateMode == \"heat-bath\") {\r\n                        this.act_hb();\r\n                    }\r\n\r\n                }\r\n            },\r\n            act_metro() {\r\n                //metropolis方法\r\n                if (this.running) {\r\n                    if (this.simulateMode == 'metropolis') {\r\n                        let length = this.length;\r\n                        let pixelMethod = length > 100;\r\n                        let stepPF = this.spfOptions[this.spf];\r\n                        let temp = this.temperature;\r\n                        for (let loop = 0; loop < stepPF; loop++) {\r\n                            let element = parseInt(Math.random() * length * length);\r\n                            let x = element % length;\r\n                            let y = parseInt(element / length);\r\n                            let energy = this.getEnergy(x, y);\r\n                            let deltaEnergy = energy * -2;\r\n                            let T = Math.pow(10, temp).toFixed(2);\r\n                            let prob = Math.exp(-deltaEnergy / T);\r\n                            if (Math.random() < prob) {\r\n                                this.arr[x][y] *= -1;\r\n                                this.arrSum += this.arr[x][y] * 2;\r\n                                this.magSus = Math.pow(this.arrSum / length / length, 2);\r\n                                if (pixelMethod)\r\n                                    this.draw(x, y);\r\n                                else\r\n                                    this.draw2(x, y);\r\n                            }\r\n                        }\r\n                        if (pixelMethod)\r\n                            this.cxt.putImageData(this.image, 0, 0); //刷新画布\r\n                        if (this.simulateMode == \"metropolis\")\r\n                            setTimeout(() => {\r\n                                //间隔1ms 递归调用\r\n                                this.act_metro();\r\n                            }, 1);\r\n                    } else if (this.simulateMode == \"wolff-cluster\") {\r\n                        this.act_wolff();\r\n                    } else if (this.simulateMode == \"heat-bath\") {\r\n                        this.act_hb();\r\n                    }\r\n                }\r\n            },\r\n            act2() {\r\n                //分步模拟\r\n                this.next2();\r\n                this.cxt.putImageData(this.image, 0, 0);\r\n            },\r\n            act() {\r\n                //模拟函数 已弃用\r\n                //this.c.clearRect(0,0,this.c.width,this.c.height);\r\n                this.next2();\r\n                //this.cxt.putImageData(this.image, 0, 0);\r\n                this.stop = window.requestAnimationFrame(this.act);\r\n            },\r\n            draw(x, y) {\r\n                //绘制坐标为xy点的矩阵的image(格子小时的快速方法)\r\n                let length = this.length;\r\n                let bitwise = Math.log2(length);\r\n                var r, g, b;\r\n                var up = JSON.parse(JSON.stringify(this.upColor));\r\n                var down = JSON.parse(JSON.stringify(this.downColor));\r\n                if ((this.arr[x][y] + 1) >> 1 & 1) {\r\n                    up = up.split(\"(\")[1];\r\n                    up = up.split(\")\")[0];\r\n                    up = up.split(\", \");\r\n                    r = parseInt(up[0]);\r\n                    g = parseInt(up[1]);\r\n                    b = parseInt(up[2]);\r\n                } else {\r\n                    down = down.split(\"(\")[1];\r\n                    down = down.split(\")\")[0];\r\n                    down = down.split(\", \");\r\n                    r = parseInt(down[0]);\r\n                    g = parseInt(down[1]);\r\n                    b = parseInt(down[2]);\r\n                }\r\n                for (\r\n                    let px = (x << 9) >> bitwise;\r\n                    px < ((x + 1) << 9) >> bitwise;\r\n                    px++\r\n                ) {\r\n                    for (\r\n                        let py = (y << 9) >> bitwise;\r\n                        py < ((y + 1) << 9) >> bitwise;\r\n                        py++\r\n                    ) {\r\n                        var index = (px + py * this.image.width) << 2;\r\n                        this.image.data[index + 0] = r;\r\n                        this.image.data[index + 1] = g;\r\n                        this.image.data[index + 2] = b;\r\n                    }\r\n                }\r\n\r\n\r\n            },\r\n            draw2(x, y) {\r\n                //格子大时的方法\r\n                let length = this.length;\r\n                let bitwise = Math.log2(length);\r\n                if ((this.arr[x][y] + 1) >> 1 & 1)\r\n                    this.cxt.fillStyle = this.upColor;\r\n                else\r\n                    this.cxt.fillStyle = this.downColor;\r\n                this.cxt.fillRect(x << 9 >> bitwise, y << 9 >> bitwise, 512 >> bitwise, 512 >> bitwise);\r\n            },\r\n            stopAnimation() {\r\n                this.running = false;\r\n                if (this.stop != \"\") window.cancelAnimationFrame(this.stop);//已弃用\r\n            },\r\n            refresh() {\r\n                //刷新画布所有像素\r\n                for (var x = 0; x < this.length; x++) {\r\n                    for (var y = 0; y < this.length; y++) {\r\n                        this.draw(x, y);\r\n                    }\r\n                }\r\n                this.cxt.putImageData(this.image, 0, 0);\r\n            },\r\n            go() {\r\n                //矩阵与画布初始化\r\n                //window.console.log(this.upColor);\r\n                let sum = 0;\r\n                this.arr = new Array();\r\n                this.c = document.getElementById(\"myCanvas\");\r\n                this.cxt = this.c.getContext(\"2d\");\r\n                this.image = this.cxt.createImageData(this.c.width, this.c.height);\r\n                let length = this.length;\r\n                let pixelMethod = length > 100;\r\n                for (var i = 0; i < this.image.data.length; i += 4) {\r\n                    //image.data[i] = 255;\r\n                    //image.data[i+1] = 255;\r\n                    //image.data[i+2] = 255;\r\n                    this.image.data[i + 3] = 255;\r\n                }\r\n                for (var x = 0; x < this.length; x++) {\r\n                    this.arr[x] = new Array();\r\n                    for (var y = 0; y < this.length; y++) {\r\n                        if (Math.round(Math.random()) == 0) {\r\n                            this.arr[x][y] = -1;\r\n                            sum += -1;\r\n                        } else {\r\n                            this.arr[x][y] = 1;\r\n                            sum += 1;\r\n                        }\r\n                        if (pixelMethod)\r\n                            this.draw(x, y);\r\n                        else\r\n                            this.draw2(x, y);\r\n                    }\r\n                }\r\n                this.arrSum = sum;\r\n                if (pixelMethod)\r\n                    this.cxt.putImageData(this.image, 0, 0);\r\n                this.drawer = false;\r\n            },\r\n            next() {\r\n                //瞎jb写的\r\n                for (var x = 0; x < this.length; x++) {\r\n                    for (var y = 0; y < this.length; y++) {\r\n                        let left = 0;\r\n                        let right = 0;\r\n                        let up = 0;\r\n                        let down = 0;\r\n                        if (x != 0) left = this.arr[x - 1][y];\r\n                        if (x != this.length - 1) right = this.arr[x + 1][y];\r\n                        if (y != 0) up = this.arr[x][y - 1];\r\n                        if (y != this.length - 1) down = this.arr[x][y + 1];\r\n                        let sum = left + right + up + down;\r\n                        if (sum > 0) this.arr[x][y] = 1;\r\n                        else if (sum < 0) this.arr[x][y] = -1;\r\n                    }\r\n                }\r\n\r\n                this.draw();\r\n            },\r\n            next2() {\r\n                //分步模拟\r\n                let length = this.length;\r\n                let temp = this.temperature;\r\n                var newArray = [...new Array(length * length).keys()];\r\n                newArray.sort(() => {\r\n                    return 0.5 - Math.random();\r\n                });\r\n                let count = 0;\r\n                newArray.forEach(element => {\r\n                    let x = element % this.length;\r\n                    let y = parseInt(element / length);\r\n                    let energy = this.getEnergy(x, y);\r\n                    let deltaEnergy = energy * -2;\r\n                    let T = Math.pow(10, temp).toFixed(2);\r\n                    let prob = Math.exp(-deltaEnergy / T);\r\n                    //window.console.log('probability:' + prob);\r\n                    if (Math.random() < prob) {\r\n                        this.arr[x][y] *= -1;\r\n                        this.draw(x, y);\r\n                        count++;\r\n                    }\r\n                });\r\n\r\n                this.count = count;\r\n\r\n\r\n            },\r\n            getEnergy(x, y) {\r\n                //获取xy坐标点的能量值\r\n                let length = this.length;\r\n                x = Number(x);\r\n                y = Number(y);\r\n                if (x < 0 || (x >= length) | (y < 0) || y >= length) {\r\n                    //window.console.log('false');\r\n                    return 0;\r\n                } else {\r\n                    let sum = 0;\r\n                    for (let i = -1; i <= 1; i += 2)\r\n                        for (let j = -1; j <= 1; j += 2)\r\n                            sum += this.arr[(x + (i + j) / 2 + length) % length][(y + (i - j) / 2 + length) % length];\r\n                    let energy = -this.arr[x][y] * sum;\r\n                    //window.console.log(energy);\r\n                    this.energy = energy;\r\n                    return energy;\r\n                }\r\n            }\r\n        }\r\n    };\r\n</script>\r\n\r\n<style lang=\"css\" scoped>\r\n    @import '../../static/ising.css';\r\n</style>\r\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./index.vue?vue&type=template&id=5c478f4a&scoped=true&\"\nimport script from \"./index.vue?vue&type=script&lang=js&\"\nexport * from \"./index.vue?vue&type=script&lang=js&\"\nimport style0 from \"./index.vue?vue&type=style&index=0&id=5c478f4a&lang=css&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"5c478f4a\",\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}